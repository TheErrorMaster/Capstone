from tkinter import *
import random

Declare a new Tkinter variable called root.
Set title to '10,000 Dice', window size to 400x400, and background color to black.
Ensure that the window size stays fixed, so disallow users from resizing the window.
Declare a variable called stringme and set as StringVar().
Declare a Boolean variable called selected and set to false.

def randomGen():
	Declare an empty list called ls.
	Declare a list called dice containing the six unicode names for the die value.
	While variable i is less than 6:
		If one of the dice has been selected for scoring, ignore and continue.
	Randomly pick of the dice from the list and append it into ls.
	Declare a ariable called lis and join ls into it as string.
	Set lis into stringme.
    
def playerTurn():
	#This function applies to both the human and the ai player. The difference is that during the player's turn, the user can make a move via input.
	While whoWon() is not true:
		If it is the human player's turn:
			Have the user roll the 6 dice.
			If the player can't score, then pass on to the ai player.
				Now have the user decide which dice to keep for scoring and which dice to re-roll.
				If the player re-rolls, then always check if the player can score points.
				Call scorePoints() after the user makes a choice.
		If it is the ai player's turn:
			Have the ai roll the 6 dice.
			If the player can't score, then pass on to the human player.
				If the ai's total score is far from winning, then the ai will keep re-rolling for the best desired score.
				If the ai's total score is close to winning, then the ai will more likely keep those dice for scoring.
				If the player re-rolls, then always check if the player can score points.
				Call scorePoints() after the ai makes a choice.

def scorePoints():
	#Scoring for the game takes place here, along with special conditions outside of the scoring system.
	If the dice roll results in all 6 1's, then set whoWon() to true and exit out of the function.

	Declare the following list of points for the die value below:
	die_one = 1000
	die_two = 200
	die_three = 300
	die_four = 400
	die_five = 500
	die_six = 600

	For each 1's in the die roll, add 100 points to the total score.
	For each 5's in the die roll, add 50 points to the total score.
	Multiply the numbering of scoring dice by 100 if a 3-of-a-kind exists and add to total score.
	Multiply the total score by 2 if a 3-of-a-kind exists.
	Multiply the total score by 3 if a 4-of-a-kind exists.
	Multiply the total score by 4 if a 5-of-a-kind exists.

	Return the total score to the player.

def whoWon():
	#To check if the player wins, either verify if a player's score is 10000 or the player has rolled all 6 ones during their turn.
	#If any of the two conditions are true, then that player wins the game.
	If ((human player's score is at least 10000) or (human player rolled all 6 1's)):
		Print "Human player won!" and return true.
	If ((ai player's score is at least 10000) or (ai player rolled all 6 1's)):
		Print "AI player won." and return true.
    
Declare a label called title with the following parameters: (text as "10,000", foreground color as white, background color as black, font as 16-pt Helvetica)
Declare a label called player with the following parameters: (text as "Select the number of players", foreground color as white, background color as black, font as 16-pt Helvetica)
Declare a button called user1_btn with the following parameters: (text as "one", height as 3, width as 20, background color as blue, foreground color as white, command opening a new window)
Declare a button called user2_btn with the following parameters: (text as "two", height as 3, width as 20, background color as blue, foreground color as white, command opening a new window)
Declare a button called user3_btn with the following parameters: (text as "change me", height as 3, width as 20, background color as blue, foreground color as white, command calling randomGen())
Declare a label called result with the following parameters: (textvariable as stringme, background color as black, foreground color as white, font as 30-pt Helvetica)

Now place all of the following parameters above into the GUI and pack them.
Set pady for the three buttons to 10.

Run the main loop of the root.
