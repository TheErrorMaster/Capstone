from tkinter import *
import random

Declare a new Tkinter variable called root.
Set title to '10,000 Dice', window size to 400x400, and background color to black.
Set the screen to align with the center.
Ensure that the window size stays fixed, so disallow users from resizing the window.
Declare the following varaibles and set as StringVar(): stringme, result, and total.

def on_closing():
	Display a message box with title "Quit" and text "Do you want to quit?"
	If user selects OK, then destroy the root window.
	If user selects Cancel, then destroy only this window.

def randomGen():
	Declare an empty list called ls.
	Declare a variable called temp_score and set to 0.
	Declare a variable called dice_count and multiply [0] by 6.
	Declare a list called dice containing the six unicode names for the die value.
	For i in range(0, 6):
		If (ls[i] is dice one):
			Increment dice_count[0].
		If (ls[i] is dice two):
			Increment dice_count[1].
		If (ls[i] is dice three):
			Increment dice_count[2].
		If (ls[i] is dice four):
			Increment dice_count[3].
		If (ls[i] is dice five):
			Increment dice_count[4].
		If (ls[i] is dice six):
			Increment dice_count[5].

	Add 100 to temp_score for each ones.
	Add 50 to temp_score for each fives.
	Declare two variables called straight_count and pair_count, and set to 0.
	For i in range(0, 6):
		If dice_count[i] is 1:
			Increment straight_count.
		Else if dice_count[i] is 2:
			Increment pair_count.
		Else if dice_count[i] is greater than 2:
			If i is 0:
				Add 1000*(dice_count[i]-2)-(100*dice_count[i]) to temp_score.
			Else if i is 4:
				Add 5*100*(dice_count[i]-2)-(50*dice_count[i]) to temp_score.
			Else:
				Add (i+1)*100*(dice_count[i]-2) to temp_score.

	Randomly pick of the dice from the list and append it into ls.
	Declare a variable called lis and join ls into it as string.
	Set lis into stringme.
	If temp_score is 0:
		Set result to "Sorry! No points earned."
	Declare a variable called new_score and set temp_score to it.
	Set result to "You scored %s points.", where %s is new_score.

#This function resets the dice roll result.
def forget():
	Set stringme and result to "".

def newWindow1():
	Declare a TopLevel of root called window1.
	Call forget().
	Place the new window over the root window and have it centered on screen.
	Set title to "One player", window size to 400x400, and background color to black.
	Create a button called roll1_btn with the following parameters: (text as "Roll Dice", height as 3, width as 20, background color as blue, foreground color as white, command calling randomGen())
	Create a label called result with the following parameters: (textvariable as stringme, background color as black, foreground color as white, font as 30-pt Helvetica)
	Create a button called delete_btn with the following parameters: (text as "Roll Dice", height as 3, width as 20, background color as blue, foreground color as white, command calling forget())
	Create a label called canScore with the following parameters: textvariable as result, background color as black, foreground color as white, font as 16-pt Helvetica)

def newWindow2():
	Declare a TopLevel of root called window2.
	Call forget().
	Place the new window over the root window and have it centered on screen.
	Set title to "Two player", window size to 400x400, and background color to black.
	Create a button called roll1_btn with the following parameters: (text as "Roll Dice", height as 3, width as 20, background color as blue, foreground color as white, command calling randomGen())
	Create a label called result with the following parameters: (textvariable as stringme, background color as black, foreground color as white, font as 30-pt Helvetica)
	Create a button called delete_btn with the following parameters: (text as "Roll Dice", height as 3, width as 20, background color as blue, foreground color as white, command calling forget())
	Create a label called canScore with the following parameters: textvariable as result, background color as black, foreground color as white, font as 16-pt Helvetica)

def newWindow3():
	Declare a TopLevel of root called window3.
	Call forget().
	Place the new window over the root window and have it centered on screen.
	Set title to "Three player", window size to 400x400, and background color to black.
	Create a button called roll1_btn with the following parameters: (text as "Roll Dice", height as 3, width as 20, background color as blue, foreground color as white, command calling randomGen())
	Create a label called result with the following parameters: (textvariable as stringme, background color as black, foreground color as white, font as 30-pt Helvetica)
	Create a button called delete_btn with the following parameters: (text as "Roll Dice", height as 3, width as 20, background color as blue, foreground color as white, command calling forget())
	Create a label called canScore with the following parameters: textvariable as result, background color as black, foreground color as white, font as 16-pt Helvetica)
    
Create a label called title with the following parameters: (text as "10,000", foreground color as white, background color as black, font as 16-pt Helvetica)
Create a label called player with the following parameters: (text as "Select the number of players", foreground color as white, background color as black, font as 16-pt Helvetica)
Create a button called play1_btn with the following parameters: (text as "One player", height as 3, width as 20, background color as blue, foreground color as white, command calling newWindow1())
Create a button called play2_btn with the following parameters: (text as "Two player", height as 3, width as 20, background color as blue, foreground color as white, command calling newWindow2())
Create a button called play3_btn with the following parameters: (text as "Three player", height as 3, width as 20, background color as blue, foreground color as white, command calling newWindow3())
Create a button called quit_btn with the following parameters: (text as "Quit", height as 3, width as 20, background color as blue, foreground color as white, command calling on_closing())

Now place all of the following parameters above into the GUI and pack them.

Run the main loop of the root.
